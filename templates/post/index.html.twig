{% extends 'base.html.twig' %}

{% block title %}Les articles !{% endblock %}

{% block body %}
    <div class="container">
        <h1 class="my-3">Nos articles</h1>
        {% if not is_granted('ROLE_USER') %}
            <a href="/login" class="my-2 btn btn-success">Connexion</a>
        {% else %}
            <a href="/logout" class="my-2 btn btn-danger">Déconnexion</a>
        {% endif %}
        <div class="row">
            {% for post in posts %}
                <div class="col-3 mb-3">
                    <div class="border border-dark rounded p-2">
                        <h3>{{post.title}}</h3>
                        <p>{{post.introduction}}</p>
                        <a href="#" class="btn btn-primary">Lire la suite</a>
                        <a href="{{ path('post_like' , { 'id' : post.id}) }}" class="btn btn-link js-like">
                        {% if app.user and post.isLikedByUser(app.user) %}
                                <i class="fas fa-thumbs-up"></i>
                            {% else %}
                                <i class="far fa-thumbs-up"></i>
                            {% endif %}
                            <span class="js-likes">{{ post.likes | length }}</span>
                            <span class="js-label">J'aime</span> 
                        </a>
                    </div>
                </div>
            {% endfor %}
        </div>
    </div>
{% endblock %}

{% block javascripts %}
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script>
{# quand la page se charge je veux trouver tous les liens #} 
{# javascript envoit une requête à symfony, récupere la réponse de symfony et travaille ensuite avec #}

    function onClickBtnLike(event){
        //pour annuler le comportement par défaut
        event.preventDefault();
        // on veut choper l'url de ce lien pour l'appeler nous même via ajax
        const url = this.href; //this = 'a' sur lequel on clique
        const spanCount = this.querySelector('span.js-likes'); // on chope le span avec sa classe - this au sein de ce 'a'
        const icone = this.querySelector('i');

        
        //j'appelle symfony via javascript via axios
        axios.get(url).then(function(response){
        //axios va envoyer une requête http, il veut appeler cette url là
        //le serveur va finir par nous répondre. axios.get m'envoit une promesse
        //.then = qd tu auras la réponse file là moi dans cette fonction
        // axios nous renvoit des données, notamment une propriété data qui sera revenu du serveur
            // console.log(response);
            // On prend ce que nous donne le serveur et on l'injecte dans le span

            //const likes = response.data.likes; //ce qui se trouve dans la data
            //spanCount.textContent = likes;
            spanCount.textContent = response.data.likes;

            //si tu contiens la classe fas, le pouce est rempli, on aime
            //Alors on le remplace qd on clique dessus
            if (icone.classList.contains('fas')) {
                icone.classList.replace('fas','far');
            } else {
                icone.classList.replace('far','fas');
            }
        }).catch(function(error){
            if(error.response.status == 403) {
                window.alert('Vous ne pouvez pas liker un article si vous n\'êtes pas connecté')
            } else {
                window.alert('Une erreur s\'est produite, réessayer plus tard');
            }
        });
    } 
    //permet de selectionner tous éléments qui correspondent 
    ///à un selecteur css, ici tous les "a" qui correspondent à la classe css js-like 
    document.querySelectorAll('a.js-like').forEach (function(link){
        // pour boucler sur chacun d'entre eux, pour chaque link je vais ecouter une action sur le clique
        link.addEventListener('click', onClickBtnLike); //qd on te clique dessus je veux appeler une fonction
    })
</script>
{% endblock %}
